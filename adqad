

TOPIC_DIRECTORY="docker.registry.basic"
BASE_URL="https://resource.geekcity.tech/kubernetes/docker-images/x86_64"
download_and_load $TOPIC_DIRECTORY $BASE_URL \
    "docker.io_registry_2.7.1.dim"



function download_and_load()
{
    TOPIC_DIRECTORY=$1
    BASE_URL=$2
    IMAGE_LIST="${@:3}"

    # prepare directories
    IMAGE_FILE_DIRECTORY_AT_HOST=docker-images/$TOPIC_DIRECTORY
    IMAGE_FILE_DIRECTORY_AT_QEMU_MACHINE=/root/docker-images/$TOPIC_DIRECTORY
    mkdir -p $IMAGE_FILE_DIRECTORY_AT_HOST
    SSH_OPTIONS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
    ssh $SSH_OPTIONS -p 10022 root@localhost "mkdir -p $IMAGE_FILE_DIRECTORY_AT_QEMU_MACHINE"

    for IMAGE_FILE in $IMAGE_LIST
    do
        IMAGE_FILE_AT_HOST=docker-images/$TOPIC_DIRECTORY/$IMAGE_FILE
        IMAGE_FILE_AT_QEMU_MACHINE=$IMAGE_FILE_DIRECTORY_AT_QEMU_MACHINE/$IMAGE_FILE
        if [ ! -f $IMAGE_FILE_AT_HOST ]; then
            TMP_FILE=$IMAGE_FILE_AT_HOST.tmp
            curl -o $TMP_FILE -L ${BASE_URL}/$TOPIC_DIRECTORY/$IMAGE_FILE
            mv $TMP_FILE $IMAGE_FILE_AT_HOST
        fi
        scp $SSH_OPTIONS -P 10022 $IMAGE_FILE_AT_HOST root@localhost:$IMAGE_FILE_AT_QEMU_MACHINE \
            && ssh $SSH_OPTIONS -p 10022 root@localhost "docker image load -i $IMAGE_FILE_AT_QEMU_MACHINE"
    done
}




curl -o docker-images/docker.registry.basic/docker.io_registry_2.7.1.dim.tmp -L https://resource.geekcity.tech/kubernetes/docker-images/x86_64/docker.registry.basic/docker.io_registry_2.7.1.dim


curl -o test.tmp -L localhost:5000/conti.icu/sshd:01

conti.icu/sshd

curl -o test -L http://127.0.0.1:5000/v2/conti.icu/sshd/manifests/01







for IMAGE in "registry.aliyuncs.com/google_containers/ingress-nginx/controller:v1.0.3" "registry.aliyuncs.com/google_containers/ingress-nginx/kube-webhook-certgen:v1.0"
do
    LOCAL_IMAGE="localhost:5000/$IMAGE"
    docker image inspect $IMAGE || docker pull $IMAGE
    docker image tag $IMAGE $LOCAL_IMAGE
    docker push $LOCAL_IMAGE
done


curl -o test.dim -L http://127.0.0.1:5000/v2/k8s.gcr.io/ingress-nginx/controller/manifests/v1.0.3



qemu-system-x86_64 \
    -accel kvm \
    -smp cpus=3 \
    -m 5G \
    -drive file=$(pwd)/centos.8.qcow2.basic,if=virtio,index=0,media=disk,format=qcow2 \
    -rtc base=localtime \
    -pidfile $(pwd)/centos.8.qcow2.basic.pid \
    -display none \
    -nic user,hostfwd=tcp::1022-:22 \
    -daemonize

SSH_OPTIONS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
scp $SSH_OPTIONS -P 1022 test.tar root@localhost:/root